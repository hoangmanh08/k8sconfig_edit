apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubeadm:
      kubernetes:
        io/etcd:
          advertise-client-urls: https://10.0.111.33:2379
  labels:
    component: etcd
    tier: control-plane
  name: etcd
  namespace: kube-system
spec:
  containers:
    command: etcd
    command: --advertise-client-urls=https://10.0.111.33:2379
    command: --cert-file=/etc/kubernetes/pki/etcd/server.crt
    command: --client-cert-auth=true
    command: --data-dir=/var/lib/etcd
    command: --initial-advertise-peer-urls=https://10.0.111.33:2380
    command: --initial-cluster=hlocs01vmmaster01=https://10.0.111.33:2380
    command: --key-file=/etc/kubernetes/pki/etcd/server.key
    command: --listen-client-urls=https://127.0.0.1:2379,https://10.0.111.33:2379
    command: --listen-metrics-urls=http://127.0.0.1:2381
    command: --listen-peer-urls=https://10.0.111.33:2380
    command: --name=hlocs01vmmaster01
    command: --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
    command: --peer-client-cert-auth=true
    command: --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
    command: --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
    command: --snapshot-count=10000
    command: --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
    image: docker-registry:4000/k8s.gcr.io/etcd:3.4.13-0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /health
        port: 2381
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    name: etcd
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /health
        port: 2381
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    volumeMounts:
      mountPath: /var/lib/etcd
      name: etcd-data
    volumeMounts:
      mountPath: /etc/kubernetes/pki/etcd
      name: etcd-certs
  hostNetwork: true
  priorityClassName: system-node-critical
  volumes:
    hostPath:
      path: /etc/kubernetes/pki/etcd
      type: DirectoryOrCreate
    name: etcd-certs
  volumes:
    hostPath:
      path: /var/lib/etcd
      type: DirectoryOrCreate
    name: etcd-data
